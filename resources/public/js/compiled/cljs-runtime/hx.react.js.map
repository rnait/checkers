{"version":3,"sources":["hx/react.cljs"],"mappings":"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","names":["hx.react/props->clj","hx.utils/props->clj","hx.react/props","el","first-arg","props?","hx.utils.clj__GT_props","hx.react/fn-as-child","config","first-child","args","ret","cljs.core.apply","cljs.core/vector?","hx.hiccup/-as-element","hx.react/create-element","cljs.core.nth","cljs.core/map?","props","children","cljs.core/-rest","G__55472","cljs.core/count","js/module$node_modules$react$index.createElement","goog/isFunction","a","c","cljs.core/-first","cljs.core/-next","hx.react/react-hiccup-config","js/module$node_modules$react$index.isValidElement","js/module$node_modules$react$index.Fragment","hx.react/f","form","hx.hiccup/parse","hx.react/parse-body","body","hx.react/fragment","hx.hiccup/extend-tag","props__55448__auto__","maybe-ref__55449__auto__","vec__55474","map__55477","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","goog/DEBUG","goog.object/set","hx.react/Provider","context","value","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","hx.react/$","seq55479","G__55480","cljs.core/first","cljs.core/next","self__4723__auto__","hx.hiccup/make-element","hx.react/assign-methods","class","method-map","seq__55481","cljs.core/seq","chunk__55482","count__55483","i__55484","vec__55491","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__55494","method-name","method-fn","cljs.core/munge","cljs.core/name","hx.react/create-class","super-class","init-fn","static-properties","method-names","ctor","this","seq__55497","chunk__55498","count__55499","i__55500","method","goog.object/get","goog/inherits","seq__55501","chunk__55502","count__55503","i__55504","vec__55511","vec__55514","k","v","hx.react/create-component","js/module$node_modules$react$index.Component","hx.react/create-pure-component","js/module$node_modules$react$index.PureComponent","hx.react/create-context","js/module$node_modules$react$index.createContext","hx.react/factory","component","cljs.core.partial"],"sourcesContent":["(ns hx.react\n  (:require [goog.object :as gobj]\n            [\"react\" :as react]\n            [hx.hiccup :as hiccup]\n            [hx.utils :as utils :include-macros true])\n  (:require-macros [hx.react]))\n\n(def props->clj utils/props->clj)\n\n(defn- props [el first-arg props?]\n  (cond\n    (and (string? el) props?) (utils/clj->props first-arg)\n\n    props? (utils/clj->props first-arg false)\n\n    true nil))\n\n(defn- fn-as-child [config first-child args]\n  (fn [& args]\n    (let [ret (apply first-child args)]\n      (if (vector? ret)\n        (hiccup/-as-element ret config)\n        ret))))\n\n(defn create-element [config el args]\n  (utils/measure-perf\n   \"create_element\"\n   (let [first-arg (utils/measure-perf\n                    \"first-arg\"\n                    (nth args 0 nil))\n         props? (map? first-arg)\n         props (utils/measure-perf\n                \"props\"\n                (props el first-arg props?))\n         children (utils/measure-perf\n                   \"children\"\n                   (if props? (-rest args) args))\n         first-child (utils/measure-perf\n                      \"first-child\"\n                      (nth children 0 nil))]\n     (case (count children)\n       0 (utils/measure-perf\n          \"no_children\"\n          (react/createElement el props))\n       1 (if (utils/measure-perf\n              \"fn?\"\n              ^boolean (goog/isFunction first-child))\n           (react/createElement el\n                                props\n                                ;; fn-as-child\n                                ;; wrap in a function to parse hiccup from render-fn\n                                (fn-as-child config first-child args))\n           (utils/measure-perf\n            \"one_child\"\n            (react/createElement el props (utils/measure-perf\n                                           \"one_child_parse\"\n                                           (hiccup/-as-element\n                                            first-child config)))))\n       ;; use .apply here for performance\n       (utils/measure-perf\n        \"has_children\"\n        (.apply\n         react/createElement nil\n         (utils/measure-perf\n          \"children_parse_loop\"\n          (loop [a #js [el props]\n                 c children]\n            (if-not (nil? c)\n              (do\n                (.push a (hiccup/-as-element\n                          (-first c) config))\n                (recur\n                 a\n                 (-next c)))\n              a)))))))))\n\n(def react-hiccup-config\n  {:create-element create-element\n   :is-element? react/isValidElement\n   :fragment react/Fragment})\n\n(defn f [form]\n  (hiccup/parse react-hiccup-config form))\n\n(defn parse-body [body]\n  (if (vector? body)\n    (f body)\n    body))\n\n(def fragment react/Fragment)\n\n(hiccup/extend-tag :<> hx.react/fragment)\n\n(hx.react/defnc Provider [{:keys [context value children]}]\n  [(.-Provider ^js context)\n   {:value value}\n   children])\n\n(hiccup/extend-tag :provider Provider)\n\n\n\n(defn $ [el & args] (hiccup/make-element react-hiccup-config el args))\n\n(defn assign-methods [class method-map]\n  (doseq [[method-name method-fn] method-map]\n    (gobj/set (.-prototype class)\n              (munge (name method-name))\n              method-fn))\n  class)\n\n(defn create-class [super-class init-fn static-properties method-names]\n  (let [ctor (fn [props]\n               (this-as this\n                 ;; auto-bind methods\n                 (doseq [method method-names]\n                   (gobj/set this (munge method)\n                             (.bind (gobj/get this (munge method)) this)))\n\n                 (init-fn this props)))]\n    ;; set static properties on prototype\n    (goog/inherits ctor super-class)\n    (doseq [[k v] static-properties]\n      (gobj/set ctor k v))\n    ctor))\n\n(defn create-component [init-fn static-properties method-names]\n  (create-class react/Component init-fn static-properties method-names))\n\n(defn create-pure-component [init-fn static-properties method-names]\n  (create-class react/PureComponent init-fn static-properties method-names))\n\n(def create-context\n  \"Just react/createContext\"\n  react/createContext)\n\n(defn factory\n  \"Takes a React component, and creates a function that returns\n  a new React element\"\n  [component]\n  (partial $ component))\n"]}